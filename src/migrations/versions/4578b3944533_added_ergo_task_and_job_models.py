"""Added ergo task and job models

Revision ID: 4578b3944533
Revises: 
Create Date: 2020-06-11 01:07:30.865259

"""
import airflow
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '4578b3944533'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    conn = op.get_bind()
    if conn.dialect.name == "mysql":
        col_ti_execution_date_type = mysql.TIMESTAMP(fsp=6)
    elif conn.dialect.name in ("sqlite", "mssql"):
        col_ti_execution_date_type = airflow.utils.sqlalchemy.UtcDateTime(timezone=True)
    else:
        col_ti_execution_date_type = sa.TIMESTAMP(timezone=True)
    op.create_table('ergo_task',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.String(length=128), nullable=False),
    sa.Column('request_data', sa.Text(), nullable=True),
    sa.Column('state', sa.String(length=20), nullable=False),
    sa.Column('created_at', airflow.utils.sqlalchemy.UtcDateTime(timezone=True), nullable=False),
    sa.Column('updated_at', airflow.utils.sqlalchemy.UtcDateTime(timezone=True), nullable=False),
    sa.Column('ti_task_id', sa.String(length=250), nullable=False),
    sa.Column('ti_dag_id', sa.String(length=250), nullable=False),
    sa.Column('ti_execution_date', col_ti_execution_date_type, nullable=False),
    sa.ForeignKeyConstraint(['ti_task_id', 'ti_dag_id', 'ti_run_id'], ['task_instance.task_id', 'task_instance.dag_id', 'task_instance.run_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ergo_task_created_at'), 'ergo_task', ['created_at'], unique=False)
    op.create_index(op.f('ix_ergo_task_updated_at'), 'ergo_task', ['updated_at'], unique=False)
    op.create_table('ergo_job',
    sa.Column('id', sa.String(length=128), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['task_id'], ['ergo_task.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ergo_job_task_id'), 'ergo_job', ['task_id'], unique=True)


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_ergo_job_task_id'), table_name='ergo_job')
    op.drop_table('ergo_job')
    op.drop_index(op.f('ix_ergo_task_updated_at'), table_name='ergo_task')
    op.drop_index(op.f('ix_ergo_task_created_at'), table_name='ergo_task')
    op.drop_table('ergo_task')
    # ### end Alembic commands ###
